# Add to your docker-compose.yml
name: homelab
services:
  traefik:
    image: traefik:3.4
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/etc/traefik
      # - /srv/homelab/data/traefik-ssl:/ssl
    networks:
      - homelab-network
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.homelab.local`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  # Update your services with Traefik labels
  portainer:
    image: portainer/portainer-ce:2.31.0-alpine
    container_name: portainer
    restart: unless-stopped
    # ports:
    #   - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - homelab-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.homelab.local`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    volumes:
      # - jellyfin_data:/config
      - jellyfin_data:/media
    networks:
      - homelab-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.homelab.local`)"
      - "traefik.http.routers.jellyfin.entrypoints=web"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    volumes:
      # - nextcloud_data:/var/www/html
      - nextcloud_data:/var/www/html/data
    environment:
      # - POSTGRES_HOST=nextcloud-db
      # - POSTGRES_DB=nextcloud
      # - POSTGRES_USER=nextcloud
      # - POSTGRES_PASSWORD=changeMe123!
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=admin123!
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.homelab.local
    # depends_on:
    #   - nextcloud-db
    networks:
      - homelab-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.homelab.local`)"
      - "traefik.http.routers.nextcloud.entrypoints=web"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_LOG_LEVEL=debug
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123!
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://grafana.homelab.local
      - PROMETHEUS_SERVER=http://prometheus:9090
    networks:
      - homelab-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.homelab.local`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    restart: unless-stopped
    # ports:
    #   - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./configs/prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=15d"
      - "--web.enable-lifecycle"
    networks:
      - homelab-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.homelab.local`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  node_exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    # ports:
    #   - "9100:9100"
    networks:
      - homelab-network

  alertmanager:
    image: prom/alertmanager:v0.28.0
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - alertmanager_data:/alertmanager
      - ./configs/alertmanager:/etc/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    networks:
      - homelab-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.homelab.local`)"
      - "traefik.http.routers.alertmanager.entrypoints=web"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    volumes:
      - ./configs/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=homelab.local
    networks:
      - homelab-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`homelab.local`)"
      - "traefik.http.routers.homepage.entrypoints=web"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"

networks:
  homelab-network:
    driver: bridge
volumes:
  traefik_data:
  portainer_data:
  jellyfin_data:
  nextcloud_data:
  grafana_data:
  prometheus_data:
  homepage_data:
  alertmanager_data:
# TODO: add services:
# - qbittorrent
# - radarr
# - sonarr
# - pihole
# - openvpn
# - codeserver
# - gitlab
# - any kubernetes cluster - k3s
# - ELK stack
