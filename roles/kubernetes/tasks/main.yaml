---
- include_tasks: setup-control-plane.yaml
  when: inventory_hostname in groups["kubernetes-control-planes"]
- include_tasks: setup-worker-node.yaml
  when: inventory_hostname in groups["kubernetes-worker-nodes"]

- name: Ensure swap is disabled
  command: swapoff -a
  changed_when: false

- name: Ensure net.ipv4.ip_forward is set
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes
    sysctl_file: /etc/sysctl.d/k8s.conf

- name: Create APT keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Check if Kubernetes GPG key already exists
  stat:
    path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: k8s_gpg_key_exists

- name: Add Kubernetes GPG key
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key
    dest: /tmp/kubernetes-key.asc
    mode: "0644"
  when: not k8s_gpg_key_exists.stat.exists

- name: Convert and install Kubernetes GPG key
  shell: |
    gpg --dearmor < /tmp/kubernetes-key.asc > /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  when: not k8s_gpg_key_exists.stat.exists

- name: Add Kubernetes APT repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /"
    filename: kubernetes
    state: present
    update_cache: yes

- name: Clean up temporary key file
  file:
    path: /tmp/kubernetes-key.asc
    state: absent

- name: Install kubelet, kubeadm, kubectl, containerd
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
      - containerd
    state: present

- name: Hold Kubernetes packages to prevent automatic updates
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl
